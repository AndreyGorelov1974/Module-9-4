/*Задание 4. «Быки и коровы»* (дополнительное задание)
Что нужно сделать
В логической игре «Быки и коровы» первый игрок загадывает четырёхзначное число (оно может начинаться и с нулей), а второй игрок должен его отгадать.
Отгадывание происходит так: второй игрок называет любое четырёхзначное число, а первый ему отвечает, сколько в этом числе «быков» и сколько «коров».
Корова — это цифра, которая совпадает по значению с какой-то из цифр задуманного числа, но стоит не на нужном месте.
Бык — это цифра, совпадающая с цифрой в задуманном числе и по значению, и по расположению.

Напишите программу, которая по загаданному числу и по названному вторым игроком числу определяет,
сколько во втором числе «быков» и сколько «коров». Не забудьте, что числа могут начинаться с нулей!

Примеры выполнения

Введите задуманное число: 5671 
Введите второе число: 7251 
Быков: 1, коров: 2

Введите задуманное число: 1234 
Введите второе число: 1234 
Быков: 4, коров: 0

Введите задуманное число: 0023 
Введите второе число: 2013 
Быков: 2, коров: 1

Введите задуманное число: 2013 
Введите второе число: 0023 
Быков: 2, коров: 1

Введите задуманное число: 1111 
Введите второе число: 1111 
Быков: 4, коров: 0

Рекомендации по выполнению
Сумма «быков» и «коров» не может быть больше четырёх.

Что оценивается
Использован строковый тип данных для считывания чисел.
Решение на примерах из условия выдаёт правильный результат.*/

#include <iostream>

int main() {

	std::string inputNumber;
	std::cout << "Enter a real number, not in exponential form: ";
	std::cin >> inputNumber;

	bool correctNumber = true;
	bool presenceDigit = false;
	int numberPoints = 0;

	if (inputNumber[0] >= '0' && inputNumber[0] <= '9') {
		presenceDigit = true;
	}
	else if (inputNumber[0] == '.') {
		numberPoints++;
	}
	else if (inputNumber[0] != '-') {
		correctNumber = false;
	}

	for (int i = 1; correctNumber && i < inputNumber.length(); i++) {
		if (inputNumber[i] >= '0' && inputNumber[i] <= '9') {
			presenceDigit = true;
		}
		else if (inputNumber[i] == '.') {
			numberPoints++;
		}
		else {
			correctNumber = false;
		}
		if (numberPoints > 1) {
			correctNumber = false;
		}
	}

	std::cout << ((presenceDigit && correctNumber) ? "Yes" : "No");